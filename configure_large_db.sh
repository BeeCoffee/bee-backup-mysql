#!/bin/bash

# =============================================================================
# SCRIPT DE CONFIGURA√á√ÉO AUTOM√ÅTICA PARA BANCOS GRANDES
# =============================================================================

set -e

# Cores para output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

echo -e "${BLUE}üöÄ CONFIGURA√á√ÉO AUTOM√ÅTICA PARA BANCOS GRANDES (200GB+)${NC}"
echo -e "${BLUE}=========================================================${NC}"
echo ""

# Verificar se j√° existe .env
if [[ -f .env ]]; then
    echo -e "${YELLOW}‚ö†Ô∏è  Arquivo .env j√° existe!${NC}"
    read -p "Deseja fazer backup do atual e criar novo? (s/n): " -n 1 -r
    echo
    if [[ $REPLY =~ ^[Ss]$ ]]; then
        mv .env .env.backup.$(date +%Y%m%d_%H%M%S)
        echo -e "${GREEN}‚úÖ Backup criado: .env.backup.$(date +%Y%m%d_%H%M%S)${NC}"
    else
        echo -e "${RED}‚ùå Opera√ß√£o cancelada${NC}"
        exit 1
    fi
fi

# Copiar template para bancos grandes
cp .env.example.large .env
echo -e "${GREEN}‚úÖ Template para bancos grandes copiado${NC}"

echo ""
echo -e "${BLUE}üìã CONFIGURA√á√ÉO INTERATIVA${NC}"
echo -e "${BLUE}===========================${NC}"

# Configura√ß√µes b√°sicas
read -p "üîó Host do servidor de origem: " SOURCE_HOST
read -p "üîå Porta do servidor de origem (padr√£o 3306): " SOURCE_PORT
SOURCE_PORT=${SOURCE_PORT:-3306}

read -p "üë§ Usu√°rio do banco de dados: " DB_USERNAME
read -s -p "üîê Senha do banco de dados: " DB_PASSWORD
echo

read -p "üóÑÔ∏è  Nome do database para backup: " DATABASE_NAME

echo ""
echo -e "${BLUE}‚öôÔ∏è  CONFIGURA√á√ïES AVAN√áADAS${NC}"
echo -e "${BLUE}===========================${NC}"

echo "Escolha o perfil de performance:"
echo "1) Conservador (mais seguro, mais lento)"
echo "2) Balanceado (recomendado)"
echo "3) Agressivo (mais r√°pido, maior risco)"
read -p "Op√ß√£o (1-3): " PERFORMANCE_PROFILE

case $PERFORMANCE_PROFILE in
    1)
        CHUNK_SIZE=25000
        CHUNK_TIMEOUT=1800
        echo -e "${GREEN}‚úÖ Perfil Conservador selecionado${NC}"
        ;;
    2)
        CHUNK_SIZE=50000
        CHUNK_TIMEOUT=2700
        echo -e "${GREEN}‚úÖ Perfil Balanceado selecionado${NC}"
        ;;
    3)
        CHUNK_SIZE=75000
        CHUNK_TIMEOUT=3600
        echo -e "${GREEN}‚úÖ Perfil Agressivo selecionado${NC}"
        ;;
    *)
        CHUNK_SIZE=50000
        CHUNK_TIMEOUT=2700
        echo -e "${YELLOW}‚ö†Ô∏è  Op√ß√£o inv√°lida, usando Balanceado${NC}"
        ;;
esac

# Configurar notifica√ß√µes
read -p "üìß Email para notifica√ß√µes: " EMAIL_TO
read -p "üì§ Email remetente: " EMAIL_FROM

echo ""
echo -e "${BLUE}üîß APLICANDO CONFIGURA√á√ïES...${NC}"

# Aplicar configura√ß√µes no arquivo .env
sed -i "s/SOURCE_HOST=.*/SOURCE_HOST=$SOURCE_HOST/" .env
sed -i "s/SOURCE_PORT=.*/SOURCE_PORT=$SOURCE_PORT/" .env
sed -i "s/DB_USERNAME=.*/DB_USERNAME=$DB_USERNAME/" .env
sed -i "s/DB_PASSWORD=.*/DB_PASSWORD=$DB_PASSWORD/" .env
sed -i "s/DATABASES=.*/DATABASES=$DATABASE_NAME/" .env
sed -i "s/CHUNK_SIZE=.*/CHUNK_SIZE=$CHUNK_SIZE/" .env
sed -i "s/CHUNK_TIMEOUT=.*/CHUNK_TIMEOUT=$CHUNK_TIMEOUT/" .env
sed -i "s/EMAIL_TO=.*/EMAIL_TO=$EMAIL_TO/" .env
sed -i "s/EMAIL_FROM=.*/EMAIL_FROM=$EMAIL_FROM/" .env

echo -e "${GREEN}‚úÖ Configura√ß√µes aplicadas com sucesso!${NC}"

echo ""
echo -e "${BLUE}üìä RESUMO DA CONFIGURA√á√ÉO${NC}"
echo -e "${BLUE}=========================${NC}"
echo -e "üîó Servidor: ${GREEN}$SOURCE_HOST:$SOURCE_PORT${NC}"
echo -e "üóÑÔ∏è  Database: ${GREEN}$DATABASE_NAME${NC}"
echo -e "üì¶ Chunk Size: ${GREEN}$CHUNK_SIZE registros${NC}"
echo -e "‚è±Ô∏è  Timeout por Chunk: ${GREEN}$CHUNK_TIMEOUT segundos${NC}"
echo -e "üìß Notifica√ß√µes: ${GREEN}$EMAIL_TO${NC}"

echo ""
echo -e "${BLUE}üöÄ PR√ìXIMOS PASSOS${NC}"
echo -e "${BLUE}===============${NC}"
echo "1. Revisar configura√ß√µes detalhadas em .env"
echo "2. Testar backup manual:"
echo -e "   ${YELLOW}docker compose up -d${NC}"
echo -e "   ${YELLOW}docker compose exec mariadb-backup /scripts/manual_backup.sh $DATABASE_NAME${NC}"
echo "3. Verificar logs em:"
echo -e "   ${YELLOW}docker compose logs -f${NC}"
echo "4. Configurar SMTP se necess√°rio"

echo ""
echo -e "${GREEN}üéâ Configura√ß√£o conclu√≠da!${NC}"
echo -e "${BLUE}üìñ Para mais informa√ß√µes, consulte: CONFIGURACAO_BANCOS_GRANDES.md${NC}"
